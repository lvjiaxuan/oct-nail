generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Image {
  id               Int               @id @default(autoincrement()) @db.UnsignedInt
  url              String?           @unique(map: "url") @db.VarChar(600)
  isShow           Int?              @default(0) @map("is_show") @db.UnsignedTinyInt
  showDescription  String?           @map("show_description") @db.VarChar(255)
  createdBy        String?           @map("created_by") @db.VarChar(32)
  updatedBy        String?           @map("updated_by") @db.VarChar(32)
  createTime       DateTime?         @default(now()) @map("create_time") @db.DateTime(0)
  updateTime       DateTime?         @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted        Int?              @map("is_deleted") @db.UnsignedTinyInt
  serviceItemImage ServiceItemImage?
  userOrderImage   UserOrderImage?   @ignore

  @@map("image")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ServiceItem {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  name             String             @db.VarChar(32)
  originalPrice    Decimal?           @map("original_price") @db.Decimal(10, 2)
  discountedPrice  Decimal?           @map("discounted_price") @db.Decimal(10, 2)
  description      String?            @db.VarChar(255)
  remark           String?            @db.VarChar(255)
  createdBy        String?            @map("created_by") @db.VarChar(32)
  updatedBy        String?            @map("updated_by") @db.VarChar(32)
  createTime       DateTime?          @default(now()) @map("create_time") @db.DateTime(0)
  updateTime       DateTime?          @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted        Int?               @map("is_deleted") @db.UnsignedTinyInt
  serviceItemImage ServiceItemImage[]
  userOrder        UserOrder[]
  userOrderImage   UserOrderImage[]   @ignore
  vipTimesCard     VipTimesCard[]

  @@map("service_item")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ServiceItemImage {
  fkServiceItemId Int         @map("fk_serviceItem_id") @db.UnsignedInt
  fkImageUrl      String      @unique(map: "fk_image_url") @map("fk_image_url") @db.VarChar(600)
  serviceItem     ServiceItem @relation(fields: [fkServiceItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "serviceItem_image_ibfk_1")
  image           Image       @relation(fields: [fkImageUrl], references: [url], onDelete: NoAction, map: "serviceItem_image_ibfk_2")

  @@index([fkServiceItemId], map: "fkServiceItemId")
  @@map("serviceItem_image")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id                                      Int           @id @default(autoincrement()) @db.UnsignedInt
  fkVipCardId                             Int?          @map("fk_vip_card_id") @db.UnsignedInt
  username                                String?       @db.VarChar(32)
  remark                                  String?       @db.VarChar(255)
  nickname                                String?       @db.VarChar(32)
  phone                                   String?       @db.Char(11)
  gender                                  String?       @default("f") @db.Char(1)
  age                                     Int?          @db.UnsignedTinyInt
  avatarUrl                               String?       @map("avatar_url") @db.VarChar(600)
  openid                                  String?       @db.Char(11)
  createdBy                               String?       @map("created_by") @db.VarChar(32)
  updatedBy                               String?       @map("updated_by") @db.VarChar(32)
  createTime                              DateTime?     @default(now()) @map("create_time") @db.DateTime(0)
  updateTime                              DateTime?     @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted                               Int?          @map("is_deleted") @db.UnsignedTinyInt
  userVipCardUserFkVipCardIdtouserVipCard UserVipCard?  @relation("user_fk_vip_card_idTouser_vip_card", fields: [fkVipCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  userOrder                               UserOrder[]
  userVipCardUserVipCardFkUserIdtouser    UserVipCard[] @relation("user_vip_card_fk_user_idTouser")

  @@index([fkVipCardId], map: "fkVipCardId")
  @@map("user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserOrder {
  id              Int          @id @default(autoincrement()) @db.UnsignedInt
  fkUserId        Int          @map("fk_user_id") @db.UnsignedInt
  fkServiceItemId Int?         @map("fk_serviceItem_id") @db.UnsignedInt
  status          Int?         @db.UnsignedTinyInt
  payType         Int?         @map("pay_type") @db.UnsignedTinyInt
  payTime         DateTime?    @map("pay_time") @db.DateTime(0)
  startTime       DateTime?    @map("start_time") @db.DateTime(0)
  endTime         DateTime?    @map("end_time") @db.DateTime(0)
  userComment     String?      @map("user_comment") @db.VarChar(255)
  userRate        Int?         @map("user_rate") @db.UnsignedTinyInt
  remark          String?      @db.VarChar(255)
  createdBy       String?      @map("created_by") @db.VarChar(32)
  updatedBy       String?      @map("updated_by") @db.VarChar(32)
  createTime      DateTime?    @default(now()) @map("create_time") @db.DateTime(0)
  updateTime      DateTime?    @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted       Int?         @map("is_deleted") @db.UnsignedTinyInt
  user            User         @relation(fields: [fkUserId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_order_ibfk_1")
  serviceItem     ServiceItem? @relation(fields: [fkServiceItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_order_ibfk_2")

  @@index([fkServiceItemId], map: "fkServiceItemId")
  @@index([fkUserId], map: "fkUserId")
  @@map("user_order")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserOrderImage {
  fkUserOrderId Int?         @map("fk_user_order_id") @db.UnsignedInt
  fkImageUrl    String?      @unique(map: "fk_image_url") @map("fk_image_url") @db.VarChar(600)
  serviceItem   ServiceItem? @relation(fields: [fkUserOrderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_order_image_ibfk_1")
  image         Image?       @relation(fields: [fkImageUrl], references: [url], onDelete: NoAction, map: "user_order_image_ibfk_2")

  @@index([fkUserOrderId], map: "fkUserOrderId")
  @@map("user_order_image")
  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserOrderVip {
  fkUserOrderId      Int             @id @map("fk_user_order_id")
  fkVipBalanceCardId Int?            @map("fk_vipBalanceCard_id") @db.UnsignedInt
  payAmount          Decimal?        @default(0.00) @map("pay_amount") @db.Decimal(10, 2)
  fkVipTimesCardId   Int?            @map("fk_vipTimesCard_id") @db.UnsignedInt
  payTimes           Int?            @map("pay_times") @db.UnsignedInt
  vipBalanceCard     VipBalanceCard? @relation(fields: [fkVipBalanceCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_order_vip_ibfk_1")
  vipTimesCard       VipTimesCard?   @relation(fields: [fkVipTimesCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_order_vip_ibfk_2")

  @@index([fkVipBalanceCardId], map: "fkVipBalanceCardId")
  @@index([fkVipTimesCardId], map: "fkVipTimesCardId")
  @@map("user_order_vip")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserVipCard {
  id                               Int              @id @default(autoincrement()) @db.UnsignedInt
  fkUserId                         Int?             @map("fk_user_id") @db.UnsignedInt
  fkVipBalanceCardId               Int?             @map("fk_vipBalanceCard_id") @db.UnsignedInt
  leftBalance                      Decimal?         @default(0.00) @map("left_balance") @db.Decimal(10, 2)
  fkVipTimesCardId                 Int?             @map("fk_vipTimesCard_id") @db.UnsignedInt
  leftTimes                        Int?             @map("left_times") @db.UnsignedInt
  userUserFkVipCardIdtouserVipCard User[]           @relation("user_fk_vip_card_idTouser_vip_card")
  userUserVipCardFkUserIdtouser    User?            @relation("user_vip_card_fk_user_idTouser", fields: [fkUserId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_vip_card_ibfk_1")
  vipBalanceCard                   VipBalanceCard?  @relation(fields: [fkVipBalanceCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_vip_card_ibfk_2")
  vipTimesCard                     VipTimesCard?    @relation(fields: [fkVipTimesCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_vip_card_ibfk_3")
  vipRechargeLog                   VipRechargeLog[]

  @@index([fkUserId], map: "fkUserId")
  @@index([fkVipBalanceCardId], map: "fkVipBalanceCardId")
  @@index([fkVipTimesCardId], map: "fkVipTimesCardId")
  @@map("user_vip_card")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model VipBalanceCard {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  description  String?        @db.VarChar(255)
  balance      Decimal?       @default(0.00) @db.Decimal(10, 2)
  createdBy    String?        @map("created_by") @db.VarChar(32)
  updatedBy    String?        @map("updated_by") @db.VarChar(32)
  createTime   DateTime?      @default(now()) @map("create_time") @db.DateTime(0)
  updateTime   DateTime?      @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted    Int?           @map("is_deleted") @db.UnsignedTinyInt
  userOrderVip UserOrderVip[]
  userVipCard  UserVipCard[]

  @@map("vip_balance_card")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model VipRechargeLog {
  id              Int          @id @default(autoincrement()) @db.UnsignedInt
  fkUserVipCardId Int?         @map("fk_userVipCard_id") @db.UnsignedInt
  rechargeBalance Decimal?     @default(0.00) @map("recharge_balance") @db.Decimal(10, 2)
  rechargeTimes   Decimal?     @default(0.00) @map("recharge_times") @db.Decimal(10, 2)
  payAmount       Decimal?     @default(0.00) @map("pay_amount") @db.Decimal(10, 2)
  createdBy       String?      @map("created_by") @db.VarChar(32)
  updatedBy       String?      @map("updated_by") @db.VarChar(32)
  createTime      DateTime?    @default(now()) @map("create_time") @db.DateTime(0)
  updateTime      DateTime?    @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted       Int?         @map("is_deleted") @db.UnsignedTinyInt
  userVipCard     UserVipCard? @relation(fields: [fkUserVipCardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vip_recharge_log_ibfk_1")

  @@index([fkUserVipCardId], map: "fkUserVipCardId")
  @@map("vip_recharge_log")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model VipTimesCard {
  id              Int            @id @default(autoincrement()) @db.UnsignedInt
  fkServiceItemId Int            @map("fk_serviceItem_id") @db.UnsignedInt
  description     String?        @db.VarChar(255)
  times           Int?           @default(0) @db.UnsignedTinyInt
  createdBy       String?        @map("created_by") @db.VarChar(32)
  updatedBy       String?        @map("updated_by") @db.VarChar(32)
  createTime      DateTime?      @default(now()) @map("create_time") @db.DateTime(0)
  updateTime      DateTime?      @default(now()) @map("update_time") @db.DateTime(0)
  isDeleted       Int?           @map("is_deleted") @db.UnsignedTinyInt
  userOrderVip    UserOrderVip[]
  userVipCard     UserVipCard[]
  serviceItem     ServiceItem    @relation(fields: [fkServiceItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vip_times_card_ibfk_1")

  @@index([fkServiceItemId], map: "fkServiceItemId")
  @@map("vip_times_card")
}
